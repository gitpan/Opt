.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Opt 3pm"
.TH Opt 3pm "2007-01-25" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
.Vb 1
\&    Opt \- Get command line options and their values
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 1
\&    This module allows you to read command\-line options and their values.
.Ve
.PP
.Vb 1
\&    This module can handle any command\-line interface.
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Opt;
\&    use strict;
.Ve
.PP
.Vb 15
\&    my ($error, $opt1, $opt2, $opt3, @info) = &Opt::GetOpt("\-opt1:b, \-opt2:s=string2, \-opt3:s", "req 1, xor 2 3", @ARGV);
\&    if ($error) {
\&        print "Errors detected in specifying options.\enUsage:<usage string>";
\&    } else {
\&        ### Rest of the code
\&        if ($opt1) {
\&            if ($info[1]==1) {
\&                ### If the value is a default value
\&                print "Default value for opt2 is taken\en";
\&            } elsif ($info[1]==3) {
\&                ### If the value is not default
\&                print "Non\-default value as given = $opt2";
\&            }
\&        }
\&    }
.Ve
.SH "INSTALLATION"
.IX Header "INSTALLATION"
.Vb 1
\&    The module can be installed using the standard Perl procedure:
.Ve
.PP
.Vb 5
\&        perl Makefile.PL
\&        make
\&        make test       # No tests defined in the version 0.1.0
\&        make install    # You may need to be root
\&        make clean      # or make realclean
.Ve
.PP
.Vb 2
\&    Windows users without a working "make" can get nmake from:
\&        ftp://ftp.microsoft.com/Softlib/MSLFILES/nmake15.exe
.Ve
.SH "USAGE"
.IX Header "USAGE"
.Vb 3
\&    The Synopsis above gives an example of how to use the perl module and the function GetOpt.
\&    In addition, extensive documentation is provided in the perl module itself. 
\&    The perl module can be usually found in the path /usr/lib/perl/5.8/ or /usr/lib/perl/5.8.8/ etc.
.Ve
.SH "VERSION"
.IX Header "VERSION"
.Vb 1
\&    This is the 0.1.0 version distribution of the Opt.pm module
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\&    Balaji Ramasubramanian (balaji.ramasubramanian@gmail.com)
.Ve
.SH "SUPPORT"
.IX Header "SUPPORT"
.Vb 3
\&    Of course, I'll welcome e\-mails.
\&    And now, I have a website. If you have a question or suggestion, 
\&    please let me know.
.Ve
.PP
.Vb 1
\&    http://balaji.ramasubramanian.googlepages.com/
.Ve
